name: Build ANET

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - candidate

jobs:
  build:
    name: Build with Gradle
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max-old-space-size=8192'

    steps:
    - name: Notify slack start
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: anet-notifications
        status: STARTED
        color: warning
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: echo "::set-env name=CHROMEDRIVER_FILEPATH::$CHROMEWEBDRIVER/chromedriver"
    - name: cache gradle
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: cache node
      uses: actions/cache@v1
      with:
        path: ./client/node_modules/.cache
        key: ${{ runner.os }}-node
        restore-keys: |
          ${{ runner.os }}-node
    - run: ./gradlew yarnSetup
    - name: get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(./gradlew -q yarn_cache_dir)"
    - name: cache yarn
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('client/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: ./gradlew jar
    - run: ./gradlew yarn_run_lint
    - name: Notify slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: anet-notifications
        status: SUCCEEDED
        color: good
    - name: Notify slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: anet-notifications
        status: FAILED
        color: danger

  test:
    needs: build
    name: Test with ${{ matrix.database.DB_DRIVER }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        database:
        - DB_DRIVER: sqlserver
          CONTAINER: anet-mssql-test-server
        - DB_DRIVER: postgresql
          CONTAINER: anet-psql-test-server
    env:
      NODE_OPTIONS: '--max-old-space-size=8192'
      DB_DRIVER: ${{ matrix.database.DB_DRIVER }}
      CONTAINER: ${{ matrix.database.CONTAINER }}

    steps:
    - name: Notify slack start
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: anet-notifications
        status: STARTED
        color: warning
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: echo "::set-env name=CHROMEDRIVER_FILEPATH::$CHROMEWEBDRIVER/chromedriver"
    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - uses: actions/cache@v1
      with:
        path: ./client/node_modules/.cache
        key: ${{ runner.os }}-node
        restore-keys: |
          ${{ runner.os }}-node
    - run: ./gradlew yarnSetup
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(./gradlew -q yarn_cache_dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('client/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: ./gradlew -PtestEnv dockerCreateDB dockerStartDB
    - run: ./gradlew -PtestEnv dockerCreateKeycloak dockerStartKeycloak
    - run: ./gradlew -PtestEnv dockerCreateFakeSmtpServer dockerStartFakeSmtpServer
    - run: ./gradlew -PtestEnv jar
    - run: ./gradlew -PtestEnv dbWait dbMigrate dbLoad
    - run: ./gradlew -PtestEnv check test jacocoTestReport
    - run: |
        ./gradlew -PtestEnv run &
        sleep 15
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - name: Set local identifier for BrowserStack
      id: browserstack-local
      run: echo ::set-output name=identifier::github-${GITHUB_RUN_ID}-${{ matrix.database.DB_DRIVER }}
    - name: Start BrowserStackLocal if needed
      run: |
        curl -qso bsl.zip https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip
        unzip -q bsl.zip
        ./BrowserStackLocal --local-identifier ${{ steps.browserstack-local.outputs.identifier }} --key ${{ secrets.BROWSERSTACK_ACCESS_KEY }} &
      if: steps.tagName.outputs.tag != ''
    - run: ./gradlew yarn_run_test-all
      env:
        GIT_TAG_NAME: ${{ steps.tagName.outputs.tag }}
        BROWSERSTACK_LOCAL_IDENTIFIER: ${{ steps.browserstack-local.outputs.identifier }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
        NODE_OPTIONS: '--max-old-space-size=8192 --throw-deprecation'
    - run: head -1000 logs/clientLog.log
      if: always()
    - name: Notify slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: anet-notifications
        status: SUCCEEDED
        color: good
    - name: Notify slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: anet-notifications
        status: FAILED
        color: danger
